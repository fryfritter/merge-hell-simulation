<directory_1/file_2.txt title>


Let go of your emotions. You’re going to see error messages on your journey to becoming a programmer. When screwing up is such an integral part of the process, you need to be ok with making mistakes in order to grow.

You learn by doing. The only way to get better at programming is to actually program. Don’t let an analysis paralysis prevent you from ever starting.

Programming isn’t like studying for a test. Memorizing stuff doesn’t matter all that much.

Cheating is completely acceptable. I use Google to solve most of my problems, and so do most programmers.

Letting problems pile up without checking is a poor strategy. I used to make endless changes to my code and expect it to work right away. The problem with this approach is that it stacks one problem on top of another, and it becomes difficult to figure what went wrong.

Learning by yourself is really tough. Talking about code and collaborating with other aspiring developers is a better way to learn for most people.

Let go of your emotions. You’re going to see error messages on your journey to becoming a programmer. When screwing up is such an integral part of the process, you need to be ok with making mistakes in order to grow.

You don’t need 5 monitors. Contrary to what Hollywood might tell you, you don’t need an insane external monitor setup to be a programmer. The computer that you own right now is probably good enough to use to start programming. Don’t waste your money.

There’s a BIG difference between a capital letter and a lowercase letter. It took me a while to get used to noticing subtle differences between similar symbols, and it can be pretty frustrating until you get used to it.

Trying to understand everything is a lost cause. In the beginning, I tried to chase down the “why” to every problem I encountered. This isn’t necessary. Computers are so complex and there is so much to learn, and you’re never going to understand everything. That’s ok.Pair program as much as possible. There is no faster way to learn how to code.

Changing bad code is part of the process. I used to think that every piece of code I wrote needed to be perfect. But making improvements to your code is normal. You’re not writing a book that can’t be changed once it’s published.

There’s a right way to ask for help. Everybody needs to ask for help at some point. And when you do, make sure that you do these 4 things:
- Overcommunicate details that you see.
- Explain exactly what you think should be happening.
- Explain exactly what is actually happening.
- Explain why you think it should be working differently.
- When you go through this process, you’ll often come across a solution without ever asking for help. It makes you think about problems in a holistic way.
